; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/
; ----------------------------------------------------------------

;****************************************
; SETUPTYPE      inno
;****************************************
; PRODUCTID      teska-mblock5
; SETUPFILE      V5.1.0.exe
;****************************************
; LICENSE        false     
; PRODUCTDESC    

; PRODUCTNAME    teska-mblock5
; PRODUCTSIZE    908 MB
; PRODUCTVER     V5.1.0
;****************************************
; SETUPSCRIPT    setup.opsiscript
; UNINSSCRIPT    uninstall.opsiscript
;****************************************
; MSIID          
; USE-MST        
; INSTALLDIR     C:\Program Files (x86)\mblock5
;****************************************
; TIMESTAMP      25.11.2019 14:17:25
;****************************************

[Actions]
requiredWinstVersion >= "4.11.3.3"
ScriptErrorMessages = false

DefVar $SetupType$
DefVar $ProductId$ 
DefVar $Setupfile$ 
DefVar $InstallDir$
DefVar $MinimumSpace$
DefVar $ExitCode$
DefVar $ErrorMsg$
DefVar $LicenseRequired$
DefVar $LicenseKey$
DefVar $LicensePool$
DefVar $MsiId$
DefVar $NsisInstallBatch$
DefVar $LogDir$

Set $LogDir$ = "%SystemDrive%\tmp"

include_append "%ScriptPath%\check_inno_exitcode.opsiscript"

; ----------------------------------------------------------------
Set $SetupType$       = "inno"
; ----------------------------------------------------------------

; $ProductId$ is the name of the product in opsi, only lower letters, no umlauts, no white spaces, use '-' as a seperator
Set $ProductId$       = "teska-mblock5"
Set $Setupfile$       = "V5.1.0.exe"
; the path where we find the product after the installation
Set $InstallDir$      = "C:\Program Files (x86)\mblock5"
Set $LicenseRequired$ = "false"
Set $LicensePool$     = "p_" + $ProductId$
Set $MsiId$           = ""
Set $MinimumSpace$    = "908 MB"
; ----------------------------------------------------------------
;
;----------------------------------------------------------------

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
   LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
   isFatalError "No Space"
   ; Stop process and set installation status to failed
else
   comment "Show product picture"
   ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $ProductId$

   if FileExists("%ScriptPath%\delsub.opsiscript")
      comment "Start uninstall sub section"
      Sub "%ScriptPath%\delsub.opsiscript"
   endif
   
   Message "Installing " + $ProductId$ + " ..."
   
   if $LicenseRequired$ = "true"
      comment "Licensing required, reserve license and get license key"
      Sub_get_licensekey
   endif

   if ($SetupType$ = "nsis")
      Set $NsisInstallBatch$ = "%ScriptPath%\V5.1.0.exe /S"
      if not ($InstallDir$ = '')
         Set $NsisInstallBatch$ = $NsisInstallBatch$ + ' /D="' + $InstallDir$ + '"'
      endif
   endif

   comment "Start setup program"
   ChangeDirectory "%SCRIPTPATH%"
   ;----------------------------------------------
   Winbatch_install_inno
   ;----------------------------------------------
   Sub_check_exitcode	
endif


; ----------------------------------------------------------------
; install sections
; ----------------------------------------------------------------
[Winbatch_install_msi]
msiexec /i "%ScriptPath%\V5.1.0.exe"  /l* "$LogDir$\$ProductId$.install_log.txt" /qb! ALLUSERS=1 REBOOT=ReallySuppress

[Winbatch_install_advancedmsi]
;"%ScriptPath%\V5.1.0.exe"  /exenoupdates /exenoui /exelog "$LogDir$\$ProductId$.install_log.txt" /qb! ALLUSERS=1 REBOOT=ReallySuppress
"%ScriptPath%\V5.1.0.exe" /qb! ALLUSERS=1 REBOOT=ReallySuppress

[Winbatch_install_inno]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\V5.1.0.exe" /sp- /silent /norestart /nocancel /SUPPRESSMSGBOXES

[Winbatch_install_installshield]
; Create setup.iss answer file by running: setup.exe /r /f1"c:\setup.iss"
; You may use an answer file by the parameter /f1"c:\setup.iss"
;"%ScriptPath%\setup.exe" /s /w /f1 "c:\setup.iss"  /f2"$LogDir$\$ProductId$.install_log.txt"
"%ScriptPath%\V5.1.0.exe" /s /w /f2"$LogDir$\$ProductId$.install_log.txt"

[Winbatch_install_installshieldmsi]
; "%ScriptPath%\V5.1.0.exe" /s /v" l* \"$LogDir$\$ProductId$.install_log.txt\" /qb! ALLUSERS=1 REBOOT=ReallySuppress"
; Spaces in the path to the logfile cause problems, so better no logfile:
"%ScriptPath%\V5.1.0.exe" /s /v" /qb! ALLUSERS=1 REBOOT=ReallySuppress"

[Winbatch_install_nsis]
;NSIS Nullsoft Scriptable Install System 
$NsisInstallBatch$
; ----------------------------------------------------------------


[Sub_get_licensekey]
if opsiLicenseManagementEnabled
   comment "License management is enabled and will be used"

   comment "Trying to get a license key"
   Set $LicenseKey$ = demandLicenseKey ($LicensePool$)
   ; If there is an assignment of exactly one licensepool to the product the following call is possible:
   ; Set $LicenseKey$ = demandLicenseKey ("", $ProductId$)
   ;
   ; If there is an assignment of a license pool to a windows software id, it is possible to use:
   ; DefVar $WindowsSoftwareId$
   ; $WindowsSoftwareId$ = "..."
   ; Set $LicenseKey$ = demandLicenseKey ("", "", $WindowsSoftwareId$)

   DefVar $ServiceErrorClass$
   set $ServiceErrorClass$ = getLastServiceErrorClass
   comment "Error class: " + $ServiceErrorClass$
   
   if $ServiceErrorClass$ = "None"
      comment "Everything fine, we got the license key '" + $LicenseKey$ + "'"
   else
      if $ServiceErrorClass$ = "LicenseConfigurationError"
         LogError "Fatal: license configuration must be corrected"
         LogError getLastServiceErrorMessage
         isFatalError
      else 
         if $ServiceErrorClass$ = "LicenseMissingError"
            LogError "Fatal: required license is not supplied"
            isFatalError
         endif
      endif
   endif
else
   LogError "Fatal: license required, but license management not enabled"
   isFatalError
endif

; ----------------------------------------------------------------
; ----------------------------------------------------------------
